# {{ ansible_managed }}
from sentry.conf.server import *

import os.path

CONF_ROOT = os.path.dirname(__file__)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '{{ sentry_db_name }}',
        'USER': '{{ sentry_db_name }}',
        'PASSWORD': '{{ sentry_db_password }}',
        'HOST': '{{ sentry_db_host }}',
        'PORT': '',
    }
}

SENTRY_USE_BIG_INTS = True

# Redis
SENTRY_REDIS_OPTIONS = {
    'hosts': {
        0: {
            'host': '{{ sentry_redis_host }}',
            'port': 6379,
            'db': {{ sentry_redis_db }}
        }
    }
}

# Cache
SENTRY_CACHE = 'sentry.cache.redis.RedisCache'

# Queue
CELERY_ALWAYS_EAGER = False
BROKER_URL = 'redis://{{ sentry_redis_host }}:6379/{{ sentry_redis_db }}'

# Rate Limits
SENTRY_RATELIMITER = 'sentry.ratelimits.redis.RedisRateLimiter'

# Update Buffers
SENTRY_BUFFER = 'sentry.buffer.redis.RedisBuffer'

# Quotas
SENTRY_QUOTAS = 'sentry.quotas.redis.RedisQuota'

# TSDB
SENTRY_TSDB = 'sentry.tsdb.redis.RedisTSDB'

# File storage
SENTRY_FILESTORE = 'django.core.files.storage.FileSystemStorage'
SENTRY_FILESTORE_OPTIONS = {
    'location': '/tmp/sentry-files',
}

# Web Server
SENTRY_URL_PREFIX = 'http://{{ sentry_server_name }}'
STAICFILES_DIRS = (os.path.realpath(os.path.join(PROJECT_ROOT, 'static')), )
STATIC_ROOT = '/srv/www/{{ sentry_server_name }}/public/_static/'

# Mail Server
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'localhost'
EMAIL_HOST_PASSWORD = ''
EMAIL_HOST_USER = ''
EMAIL_PORT = 25
EMAIL_USE_TLS = False
SERVER_EMAIL = '{{ sentry_server_email }}'

# If you're using mailgun for inbound mail, set your API key and configure a
# route to forward to /api/hooks/mailgun/inbound/
MAILGUN_API_KEY = ''

# etc.
SECRET_KEY = '{{ sentry_secret_key }}'

# Auth
SENTRY_ALLOW_REGISTRATION = False
SENTRY_ALLOW_PUBLIC_PROJECTS = False
